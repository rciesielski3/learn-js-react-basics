export const fortuneMessages = [
  'Always check your return values. Even your dog does.',
  'Never mutate state directly in React.',
  "Semicolons won't save you, but consistency will.",
  'Name your variables like future you has to read them.',
  'Fix the root cause, not the symptom.',
  'Write code that makes sense tomorrow, not just today.',
  'DRY: Don’t Repeat Yourself. Except for readability.',
  'The best debugger is a clear mind and good logging.',
  'Good code is like a good joke — it doesn’t need explaining.',
  'Don’t comment bad code — rewrite it.',
  'There’s no shame in Googling — only in not learning.',
  'A failing test is better than no test at all.',
  'The first solution is rarely the best. Iterate.',
  'If it works on your machine only, it doesn’t work.',
  'Be kind to future you. Write clear code.',
  'Version control is your superpower. Use it often.',
  'Null is not false. Undefined is not zero.',
  'Never trust input from the user. Ever.',
  'The DOM will betray you. Keep it at a distance.',
  'Make it work. Make it right. Then make it fast.',
  'Don’t optimize prematurely. Focus on clarity.',
  'Your code is read more than it’s written.',
  'A test that never fails is no test at all.',
  'Naming is hard. Still worth the time.',
  'The best feature is one you never had to build.',
  'Reinventing the wheel isn’t always bad — but it should be round.',
  'Start small. Think big. Iterate quickly.',
  'Write code like you’ll explain it in an interview.',
  'A comment should explain why, not what.',
  'Logs are like breadcrumbs for your future self.',
  'Refactor when it hurts — not when it’s fun.',
  'Enums are your friend. Magic strings are not.',
  'If something is too clever, it’s probably too fragile.',
  'Code is like humor — if you have to explain it, it’s bad.',
  'Learn the tools. Then trust them.',
  'Small commits, big confidence.',
  'Every bug teaches you something — write it down.',
  'You can’t fix what you can’t reproduce.',
  'The best code is no code at all.',
  'Push often. Regret less.',
  'A linter doesn’t replace thinking — but it helps.',
  'Beware the boolean trap — name your flags clearly.',
  'Consistent formatting > personal preference.',
  'Don’t ship console.logs to production.',
  'Watch for off-by-one errors — they’re sneaky.',
  'The build should be boring and predictable.',
  'Read the error message. Then read it again.',
  'Broken is better than silently wrong.',
  'Delete code fearlessly — Git has your back.'
];
